<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imglstTmp.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>22, 41</value>
  </metadata>
  <data name="imglstTmp.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB2
        CwAAAk1TRnQBSQFMAgEBBAEAASABAAEgAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AB4AYP8GJgEpASsBLAEvATMBNQFY
        AWABYQFzAnsBOwFBAUMBRwFPAVIBSAFQAVMBRQFMAU8BLwEzATQBjgGaAZsBMgE2ATgBLAEvATAGJgP8
        A+4B5QLjAeEC3wHhAuAB4wLhAeIC4QHbAtoB3ALaAeIC4AHiAeEB4AHjAeEB4AHkAuIB6ALnAe8C7gP5
        Nv8D2xXlA+kP/wYkASgBKgErATIBOQE8AbIByQHKAVoBZAFlAVEBXAFhAVoBZwFsAVwBaQFuAVYBYgFn
        ATQBPAE+AbQCyAFQAVsBXgEsATABMgYkA/4B5gLlAfUC8wH1AvMB9QLzAfUC8wHnAuUB8ALuAekC5wHo
        AuYB9QLzAfUC8wH1AvMB9QLzAecC5QP+Nv8B0QHeAfEB6QHyAf8B6QHyAf8B6QHyAf8C2gHRAeMB3AHM
        AeMB3AHMAeMB3AHMAeYB4AHTD/8GJAEmAicBTQFYAVwBswHMAc4BNQE8AT8BTgFZAV0BVgFjAWcBWAFl
        AWkBSwFVAWYBRgFQAVUBYAFsAW0BiQGdAaABKQEsAS0GJAP/AegB5wHmAeoC6QPwAeMB4gHtAd8B3gHs
        Ad8B3gHsAd8B3gHsAd8B3gHsAd8B3gHsAd8B3gHsAuUB7QPwA+cB6QLoOf8B3QHnAfQJ/wHZAdgBzAHj
        AdwBzAHjAdwBzAHjAdwBzAHmAd4Bzg//CSQBlgGrAbIBVgFiAWUBPgFHAUoBSQFTAVYBUAFcAWABUgFd
        AWIBTQFXAVsBQwFNAVABKQEvATABuAHRAdgBJwIpBiQD/wHtAuwB8QLwA/8BwwHEAe4BxAHFAeoBwAHB
        AeoCvAHvAbcBtQHtAbYBswHpAbYBswHpAckByAHxA/8D7AHtAuw5/wHdAecB9An/AeUB4wHXAf0B9QHl
        Af0B9QHlAf0B9QHlAecB4AHOD/8GJAE1ATgBOgGpAcEByQEpAS8BMQE6AUIBRQFCAUwBTwFJAVMBVwFK
        AVUBWAFGAVABUwE+AUcBSgEwATcBOgGDAZUBnAFLAVIBVAYkA/8B8ALvAfEC8AL/Af4BzQHnAV4B0AHo
        AWkBzwHoAWcB2gHtAYkB7gGUAUMB7gGMATYB7QGTAUMB8QGdAVUD/wPsAfEC8Dn/Ad0B5wH0Cf8B2gHY
        AcsB4wHcAcwB4wHcAcwB5QHeAc0B6AHgAc4P/wYkAX0BjAGSAVIBXgFiAS4BNQE3ATUBPAE/ATwBRAFH
        AUEBSgFNAUIBSwFPAT4BRwFKATgBQAFDATIBOQE7ATwBRQFIAYcBmAGeBiQD/wHxAvAB8QLwAv8B/gHK
        AeYBVQHWAekBewHVAekBegHVAesBdgHwAYQBKAHuAakBaQHtAacBZQHyAZEBPwP/A+wB9AHzAfI5/wHd
        AecB9An/AdgB1wHLAeMB3AHMAeMB3AHMAeMB3AHMAecB4AHOD/8DJAEsAi4BnwG0AbwBGwEeAR8BKwEx
        ATMBMAE3ATkBNQE9AT8BOQFBAUQBOgFCAUUBNwE/AUIBMwE6ATwBLAEyATQBGgEeASABmwGwAbgBJwIo
        AyQD/wHyA/EC8AP/AfAB6AG4Ae0B4wGpAe0B5AGsAfMB6wHGAfYBwQGTAfQBrwFyAfQBrwFyAfYBxAGX
        A/8D7AHzAvI5/wHdAecB9An/AtgB0AHjAdwBzAHUAdUBuQHRAdQBtQHlAeAB0A//AyQBawF3AXwBSQFT
        AVcBGQEaARsBJwEtAS8BKwExATQBLwE2ATgBMgE5ATwBMwE6ATwBMQE4AToBLQE0ATYBKQEuATIBIgEk
        ASwBWQFlAWoBVQFdAWADJAP/AfEB7wHwAfEC8AP/AfkB2wHBAfgB2wHCAfgB3gHGAfoB3AHCAfMBvgGN
        AfEBuwGJAfIBugGGAfMBugGGA/8D7AHyAvE5/wHHAdEB3wHgAeIB5QHgAeIB5QHgAeIB5QHIAdgB5QHa
        AuUBygHeAdIB0wHiAd4ByQHPAcgD5gP3Cf8DJwGUAagBrwEHAQgBHgEHAQgBHAEjASgBKgEnAS0BLwEp
        AS8BMQEoAS4BMAEqATABNAErATEBNAEpAS8BMQEmASsBLQEQAhEBEAESARkBiAGaAaADJAP/Ae8C7gHx
        AvAD/wH7AeEBywH6AeEBywH6AeEBywH7AeMBzgH2Ac8BqgH2AcIBlAH1AcIBlQH3AcgBnwP/A+wB8gHx
        AfAD/wPfBtsD5wb/A+YG2wPeBv8D3wbbA94G/wHDAdEB5AHuAfUB/wHuAfUB/wHuAfUB/wGgAbQB3AG5
        Ab8B0wG+AbwB0QHEAcUB1wHTAeIB4wb9Cf8BJQImAXUBhAGKAQcCCAMBARsBHgEgASQBKQErASkBLAIp
        ASwBKAElASoBNgEnASwBLgElASoBLAEiAScBKQIDAQsBBAEFAR0BeAGJAY8BJwIoA/8B7QLsAfEC8AP/
        AvMB5wHzAe8B0gHyAe4BzwH3AfUB5A//A+wC8QHwA/8D7gb/A+4G2APsBv8D7gPXA9sD5Ab/A+4G/wGr
        AbUB0QHHAc8B5AHHAc8B5AHHAc8B5AGhAbkB2QGoAb4B1wG1AcIB2AG1AcQB2QHFAcwB1QPqAvAB7wn/
        AyQBMAIyAW0BewGAAQkBCgELAQgCCQEfASQBJgEiAScBKQEjASgBKgEkASkBKwEjASgBKgEiAScBKAER
        AhQDAAEsATIBNAFmAXIBdgMkA/8B5wLlAfEC8AHzAfgB/gG4AckBvwHqAdkBhQH1AdwBdgH1Ad4BgAH2
        AfMB7QHjAdoByAHjAdsBygHzAeMB0AH7AfQE7AHyAvED/wPuBv8G7gPzA+kG/wbuA/8D3gb/A+4G/wHN
        AcwB4hX/Ac0BzAHiD/8GJAErAi0BagF4AX0BDAENAQ4BCQEKAQsBHwEjASUBIAElAScBIQElAScBIAEl
        ASYBDwERARIDAAFBAUsBTgFWAV8BYgYkA/8B6QLoAfEC8AP/Ae0B6QHEAe4B3gGUAfYB4wGRAfoB8QHJ
        AfIB7gHlAdoBywGxAdwBzQG2AfMB2gHBAfwB7wHjA+wB8wHyAfED/wPuBv8G7gPzA+kG/wbuA/8D3gb/
        A+4G/wHNAcwB4hX/Ac0BzAHiD/8JJAEoAikBZgFzAXgBDwERARIBCwEMAQ0BGwEeAR8BGwEeAR8BDwEQ
        AREDAgFVAWABZAFCAUgBSgkkA/8B6QLoAfEC8B7/A+wB8wLyA/8D7gb/Bu4D8wPpBv8G7gP/A94G/wPu
        A/4D/wHNAcwB4hX/Ac0BzAHiD/8MJAMmAWEBbQFxATIBNAE1AUwBTQFVATIBMwE4AT4BPwFAAV8BawFw
        ATEBMwE0DCQD/wHkAuMB2ALXBuED5QPrBtwG6wPiA9sDxAHwAu8D/wPuA/ID/gPuBtgD7AP6AfMC9APu
        A9cD2wPkA/sD9QPuBv8BvQG7AdwB4gHhAfYB4gHhAfYB4gHhAfYB4gHhAfYB4gHhAfYB4gHhAfYB4gHh
        AfYBzQHMAeEP/xImAVUBXQFfARIBEwEVAhEBEgFRAVkBXAMpDyYD/wHpAegB5wH1AvMB9QLzAfUD8wLx
        AeoC6AHTAtIB1ALSAfMC8QH1AvMB9QLzAfUC8wH1AvMB6wLqA/8D5QbbA+0G/wPrBtsD4wb/A+MG2wPh
        Bv8D9BXxA/wP/zAnA/8B8QLwAesC6QHtAusB8ALuAfIC8AHyAvEB5wHlAeQB6gLnAfEB8AHvAesC6QHr
        AukB7ALrAfIC8QH2AvUD/wFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP//wACAAs=
</value>
  </data>
  <metadata name="tipPath.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>153, 41</value>
  </metadata>
</root>