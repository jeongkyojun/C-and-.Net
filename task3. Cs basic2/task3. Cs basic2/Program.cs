using System;
using static System.Console;

/*
 * 
 * C# 프로그래밍 3일차 2단원 C#기초 : 9강~ 12강
 * Copyright 2020. Jeong kyojun, All pictures cannot be copied without permission.
 *
 */

namespace task3._Cs_basic2
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
            operater.operater_setup();
        }
    }

    /*
     * 9.1. 연산자
     * 피연산자를 이용하여 연산 작업을 수행하는 수단
     * 단항 연산자, 이항 연산자, 삼항 연산자로 나뉜다.
     */

    class operater
    {
        static void unary()
        {
            int number = 1;
            int subnum = -number; // 여기서 -는 피연산자의 부호를 바꿔주는 단항연산자이다.

            WriteLine("단항연산자는 연산자&피연산자의 형식으로 이루어져 있다.\n");
            WriteLine("예를 들어, -{0} 와 같이, 피연산자인 {0}의 부호를 바꾸는 등의 연산을 수행한다.\n", number);
            WriteLine("마찬가지로, +{0} 에서 + 또한 단항 연산자이다.\n", number);
            WriteLine("또한, (int)나 (double) 같이 다른 자료형으로 변환해주는 변환연산자 또한 단항연산자에 속한다.\n");

            //10.2. 증감연산자
            WriteLine("또다른 예로 값을 점차적으로 증가/감소시키는 증감연산자(++,--)가 있는데, 피연산자의 위치에 따라 전위/후위 증감연산자로 나뉜다.\n");
            WriteLine("전위 증감연산자는 해당 피연산자에 대한 작업을 수행하기 전에 +1을 하는것이고, 후위 증감연산자는 해당 피연산자에 대한 작업을 수행한 후, +1을 하는 것이다.\n");
            WriteLine("Ex) a=4; \n WriteLine(++a); // a가 출력되기 전에 a값이 1이 증가하여 5가 출력된다.\n\n b=4;\n WriteLine(b++); // 4가 출력된 뒤, b의 값은 1이 증가하여 5가 된다.\n");
            
        }

        static void binary()
        {
            int number1 = 5;
            int number2 = 3;

            WriteLine("이항연산자는 피연산자&연산자&피연산자와 같이 피연산자 두개를 이용한 연산작업을 수행한다.\n");
            WriteLine("즉, {0}+{1}, {0}-{1}, {0}*{1}, {0}/{1} 등의 덧셈, 뺄셈, 곱셈, 나눗셈 등의 사칙연산을 수행하는 산술연산자가 여기에 속한다.\n", number1, number2);
            WriteLine("또한 {문자열}+{문자열} 같은 두 문자열을 연결해주는 문자열 연결 연산자가 이항연산자에 속한다.\n");
            
            //10.1 할당 연산자
            WriteLine("그리고, 특정 변수에 데이터를 대입하는데 사용되는 할당연산자( =, +=, -=, *= 등의)도 이항연산자에 속한다.\n");

            //11.1 관계형 연산자, 11.2 논리 연산자
            WriteLine(">,<,== 와 같이 두 피연산자의 관계를 확인하여 참/거짓으로 나타내는 관계형 연산자, \n");
            WriteLine("OR(||),AND(&&),NOT(!) 등의 조건식에 대한 논리연산을 수행하는논리 연산자 또한 이항연산자이다.\n");

            //12.1 비트 연산자
            WriteLine("논리 연산자와 흡사한 비트 연산자도 있는데, 2진 비트에 대한 AND(&),OR(|),XOR(^),NOT(~)등의 비트 연산을 수행하는 연산자이다.\n");
            //12.2 시프트 연산자
            WriteLine("비트 관련 연산자 중에서는 해당 비트를 왼쪽/오른쪽으로 이동시키는 시프트 연산자 또한 있다.");
            WriteLine("이때, 이동되면서 생기는 자리는 0값으로 채워진다.\n Ex : \n int a = 0b00010;\n a<<2;\n WriteLine(a);//a는 00010에서 01000으로 이동하여 8이 된다.;");

            
        }

        static void ternary()
        {
            //12.3. 기타 연산자
            WriteLine("삼항연산자는 피연산자 &연산자&피연산자&연산자&피연산자 의 형식을 가지는 연산자이다.\n");
            WriteLine("대표적인 연산자로 조건연산자가 있는데,\n\n(조건) ? (조건이 참일경우의 지시문):(조건이 거짓일 경우의 지시문);\n\n으로 구성된다.");
            WriteLine("이 외에도 기타 연산자로 나열(콤마)연산자가 있는데, 여러 변수를 사용할때,\n\n int a=10,b=20,3=30;\n\n 과 같이 콤마를 통해 이어주는 역할을 수행한다.\n");
            WriteLine("또한 해당 피연산자의 데이터 형식 자체의 크기를 구하는 sizeof 연산자 또한 있는데, 이는 byte 크기값을 직접 반환해 준다.");
        }

        public static void operater_setup()
        {
            WriteLine("\n단항 연산자 : ");
            WriteLine("-----------------------------------------------------------------------------------------------------------------------------");
            unary();
            WriteLine("-----------------------------------------------------------------------------------------------------------------------------");
            WriteLine("이항 연산자 : ");
            WriteLine("-----------------------------------------------------------------------------------------------------------------------------");
            binary();
            WriteLine("-----------------------------------------------------------------------------------------------------------------------------");
            WriteLine("삼항 연산자 : ");
            WriteLine("-----------------------------------------------------------------------------------------------------------------------------");
            ternary();
            WriteLine();
            WriteLine("이와 같이 다양한 연산자들이 있는데, 각자 우선순위가 정해져 있다.");
            WriteLine("연산자 들에 대한 우선순위는");
            WriteLine("괄호 연산자 > 증감 연산자 > 산술 연산자(-(음수) > *,/ > & > +,-) > 연결 연산자 > 관계 연산자 > 논리 연산자(Not > And > Or) 이다.");
        }
    }
}
